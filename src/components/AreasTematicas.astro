---
import { useEffect } from "react";

import Header from "../components/HeaderAreasTematicas.jsx";
import Footer from "./Footer.astro";

const AREAS = [
  {
    titulo: "Innovación",
    descripcion: "Fomentar la creatividad y la adopción de nuevas tecnologías para generar soluciones efectivas que impulsen el crecimiento, la competitividad y el desarrollo sostenible.",
    imagen: "/img/coicit/areas/12.png",
  },
  {
    titulo: "Cambio Climático",
    descripcion: "Explorar temas clave como el cambio climático, la protección del medio ambiente, la captura de carbono y la reducción de la huella de carbono para promover un futuro más sostenible.",
    imagen: "/img/coicit/areas/13.png",
  },
  {
    titulo: "Desarrollo Social",
    descripcion: "Abordar el desarrollo social a través de iniciativas enfocadas en la salud, la educación y el mejoramiento de la calidad de vida de las comunidades.",
    imagen: "/img/coicit/areas/14.png",
  },
  {
    titulo: "Infraestructura",
    descripcion: "Fomentar el crecimiento mediante inversiones en infraestructura moderna y soluciones en telecomunicaciones que mejoran la conectividad, impulsan la innovación y fortalecen el desarrollo económico y social.",
    imagen: "/img/coicit/areas/15.png",
  },
  {
    titulo: "Logística y Transporte",
    descripcion: "Desarrollar soluciones eficientes para el transporte de carga, optimizando la movilidad, fortaleciendo cadenas de suministro y facilitando el comercio global.",
    imagen: "/img/coicit/areas/16.png",
  },
  {
    titulo: "Energías",
    descripcion: "Impulsar el cambio hacia fuentes de energía limpias y renovables, fomentando una transición energética sostenible que reduce emisiones y garantiza un futuro ambientalmente responsable y eficiente.",
    imagen: "/img/coicit/areas/17.png",
  },
  {
    titulo: "Nuevas Tecnologías de Información y Comunicación",
    descripcion: "Explorar el potencial de la inteligencia artificial, la realidad virtual, la realidad aumentada y el Internet de las Cosas para transformar industrias, mejorar la experiencia digital y conectar el mundo de manera inteligente y eficiente.",
    imagen: "/img/coicit/areas/18.png",
  },
  {
    titulo: "Economía Circular",
    descripcion: "Promover prácticas sostenibles que maximizan la reutilización y el reciclaje, optimizando el manejo de desechos sólidos para reducir el impacto ambiental y fomentar un uso responsable de los recursos.",
    imagen: "/img/coicit/areas/19.png",
  },
  {
    titulo: "Ciencias e Ingeniería de Materiales",
    descripcion: "Desarrollar materiales innovadores que impulsan la tecnología y mejoran la calidad y sostenibilidad de productos en distintos sectores industriales.",
    imagen: "/img/coicit/areas/20.png",
  },
];
---

<div class="page-container">
  <Header client:load />

  <main class="main-content">
    <h1 class="areas-title">Áreas Temáticas</h1>
    <div class="areas-grid" id="areasGrid">
      {AREAS.map((area, idx) => (
        <div class="area-card">
          <div class="area-img-container">
            <img src={area.imagen} alt={area.titulo} class="area-img" />
            <div class="area-title">{area.titulo}</div>
          </div>
          <div class="area-desc">{area.descripcion}</div>
        </div>
      ))}
    </div>
  </main>

  <Footer />
</div>

<script type="module">
  // Solo se ejecuta en el cliente
  if (typeof window !== "undefined") {
    const grid = document.getElementById("areasGrid");
    if (grid) {
      grid.addEventListener("mouseover", (e) => {
        const card = e.target.closest(".area-card");
        if (!card) return;
        // Encuentra la fila de la tarjeta
        const cards = Array.from(grid.children);
        const cardIndex = cards.indexOf(card);
        // Calcula cuántas columnas hay (según el ancho de la pantalla)
        const gridStyles = window.getComputedStyle(grid);
        const columns = parseInt(gridStyles.getPropertyValue("grid-template-columns").split(" ").length);
        const rowStart = Math.floor(cardIndex / columns) * columns;
        const rowEnd = rowStart + columns;
        // Activa todas las tarjetas de la fila
        cards.slice(rowStart, rowEnd).forEach(c => c.classList.add("show-desc"));
      });
      grid.addEventListener("mouseout", (e) => {
        const cards = grid.querySelectorAll(".area-card");
        cards.forEach(c => c.classList.remove("show-desc"));
      });
    }
  }
</script>

<style>
  body {
    min-height: 100vh;
    margin: 0;
    padding: 0;
    background: linear-gradient(145deg, #07182e 0%, #0f2946 50%, #17395b 100%);
  }

  .page-container {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    background: linear-gradient(145deg, #07182e 0%, #0f2946 50%, #17395b 100%);
  }

  .main-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
  }

  .areas-title {
    text-align: center;
    margin-top: 4rem;
    color: #fff;
    font-size: 2.5rem;
    font-weight: bold;
    letter-spacing: 1px;
    text-shadow: 0 2px 16px #0f2946, 0 1px 0 #000;
    font-family: 'Montserrat', Arial, Helvetica, sans-serif;
  }

  .areas-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 2.5rem;
    width: 100%;
    max-width: 1100px;
    margin: 3rem auto 0 auto;
    padding: 0 1rem 3rem 1rem;
  }

  .area-card {
    background: rgba(11, 23, 46, 0.85);
    border-radius: 1.5rem;
    box-shadow: 0 8px 32px 0 rgba(0,0,0,0.25);
    overflow: hidden; /* importante */
    transition: box-shadow 0.3s, height 0.3s ease;
    position: relative;
    display: flex;
    flex-direction: column;
  }

  .area-img-container {
    position: relative;
    width: 100%;
    height: 260px;
    overflow: hidden;
    display: flex;
    align-items: flex-end;
    justify-content: center;
    background: #222;
    cursor: pointer;
  }

  .area-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s cubic-bezier(.23,1.02,.64,.98), filter 0.4s;
    filter: brightness(0.85) grayscale(10%);
  }

  .area-title {
    position: absolute;
    bottom: 2rem;
    left: 0;
    width: 100%;
    text-align: center;
    color: #fff;
    font-size: 1.6rem;
    font-weight: bold;
    letter-spacing: 1px;
    text-shadow: 0 2px 16px #010d1f, 0 1px 0 #000;
    z-index: 2;
    transition: bottom 0.4s, color 0.4s;
    pointer-events: none;
  }

  .area-desc {
    color: #fff;
    font-size: 1.08rem;
    opacity: 0;
    max-height: 0;
    padding: 0 1.2rem;
    margin-top: 0;
    text-align: justify; /* Justifica el texto */
    transition: opacity 0.4s, max-height 0.4s, margin 0.4s;
    background: linear-gradient(180deg, transparent 0%, #07182e 100%);
    border-radius: 0 0 1.5rem 1.5rem;
    overflow: hidden;
  }

  /* Hover SOLO en la tarjeta actual */
  .area-card:hover .area-img,
  .area-card:focus-within .area-img {
    transform: scale(1.08);
    filter: brightness(1) grayscale(0%);
  }

  .area-card:hover .area-title,
  .area-card:focus-within .area-title {
    color: #e0b02e;
    bottom: 80px;
    text-shadow: 0 2px 16px #e0b02e, 0 1px 0 #000;
  }

  .area-card:hover .area-desc,
  .area-card.show-desc .area-desc {
    opacity: 1;
    max-height: 200px;
    margin: 1.2rem 0 1.5rem 0;
  }

  @media (max-width: 900px) {
    .areas-title {
      font-size: 2rem;
      margin-top: 4rem;
    }
  }

  @media (max-width: 600px) {
    .areas-title { 
      font-size: 1.3rem; 
      margin-top: 5.5rem;
    }
    .area-img-container { 
      height: 120px;
    }
    .areas-grid { 
      gap: 1.2rem; 
      padding: 2rem 0; 
      justify-items: center; 
    }
    .area-card {
      max-width: 85vw;
      margin: 0 auto;
    }
    .area-title {
      font-size: 1.1rem;
      padding: 0 0.5rem;
      word-break: break-word;
      white-space: normal;
      line-height: 1.2;
    }
    .area-desc {
      font-size: 0.95rem;
      padding: 0 0.7rem;
      word-break: break-word;
      white-space: normal;
      line-height: 1.4;
      text-align: justify; /* Justifica el texto en móvil también */
    }
  }
</style>

